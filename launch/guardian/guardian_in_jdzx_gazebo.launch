<?xml version="1.0"?>
<launch>

  <!-- roslaunch arguments -->
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="world_name" value="$(find jdzx_nav)/worlds/jdzx.world"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <arg name="robot_description" default="$(find xacro)/xacro.py '$(find jdzx_nav)/urdf/guardian_v9/my_guardian.urdf.xacro'" />

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot >
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model guardian -param robot_description"/-->

  <!-- ros_control guardian launch file >
  <include file="$(find guardian_control)/launch/my_guardian_control.launch" /-->

  <!-- tf broadcaster for /odom and /map 
  <node name="tf_broadcaster" pkg="guardian_gazebo" type="tf_broadcaster" />-->
  
  <!-- rviz -->
  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find guardian_gazebo)/rviz/my_navigation.rviz"/-->

</launch>
